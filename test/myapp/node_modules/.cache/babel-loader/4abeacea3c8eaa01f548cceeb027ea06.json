{"ast":null,"code":"var _jsxFileName = \"/Users/afra/Desktop/BootCamp Refrence/React/React projects/Project02/Project02/test/myapp/src/Components/DateLC.js\",\n    _s = $RefreshSig$();\n\nimport './StyleDate.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Clock(props) {\n  _s();\n\n  const [date, setDate] = useState(new Date()); //Replaces componentDidMount and componentWillUnmount\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", date.toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n} // export default class DateLC extends Component {\n//   const[count, setCount] = useState(\"\");\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       date: new Date()\n//     };\n//   }\n//   componentDidMount() {\n//     this.timerID = setInterval(\n//       () => this.timeNow(),\n//       1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerID);\n//   }\n//   timeNow() {\n//     this.setState({\n//       date: new Date()\n//     });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h2 className=\"Date\" >Riyadh local time {this.state.date.toLocaleTimeString()} </h2>\n//       </div>\n//     );\n//   }\n// }\n\n_s(Clock, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n\n_c = Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/afra/Desktop/BootCamp Refrence/React/React projects/Project02/Project02/test/myapp/src/Components/DateLC.js"],"names":["useState","useEffect","Clock","props","date","setDate","Date","timerID","setInterval","tick","cleanup","clearInterval","toLocaleTimeString"],"mappings":";;;AAAA,OAAO,iBAAP;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAIM,IAAJ,EAAD,CAAhC,CADmC,CAGpC;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,OAAO,GAAGC,WAAW,CAAE,MAAMC,IAAI,EAAZ,EAAgB,IAAhB,CAAzB;AAEA,WAAO,SAASC,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACJ,OAAD,CAAb;AACD,KAFH;AAGA,GANQ,CAAT;;AAQE,WAASE,IAAT,GAAgB;AACfJ,IAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACA;;AAED,sBACG;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAWF,IAAI,CAACQ,kBAAL,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMF,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtDwBV,K;;KAAAA,K","sourcesContent":["import './StyleDate.css';\n\nimport { useState, useEffect } from 'react';\n\nexport default function Clock(props) {\n  const [date, setDate] = useState(new Date());\n\n //Replaces componentDidMount and componentWillUnmount\n useEffect(() => {\n  var timerID = setInterval( () => tick(), 1000 );\n\n  return function cleanup() {\n      clearInterval(timerID);\n    };\n });\n\n   function tick() {\n    setDate(new Date());\n   }\n\n   return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n}\n\n// export default class DateLC extends Component {\n//   const[count, setCount] = useState(\"\");\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       date: new Date()\n//     };\n//   }\n//   componentDidMount() {\n//     this.timerID = setInterval(\n//       () => this.timeNow(),\n//       1000\n//     );\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerID);\n//   }\n//   timeNow() {\n//     this.setState({\n//       date: new Date()\n//     });\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h2 className=\"Date\" >Riyadh local time {this.state.date.toLocaleTimeString()} </h2>\n//       </div>\n//     );\n//   }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}